from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession

from bot.base import UserDAO
from bot.keyboards.kbs import main_kb

rating_router = Router()

@rating_router.callback_query(F.data == "leader_board")
async def leader_board(callback: CallbackQuery, session_without_commit: AsyncSession):
    
        leader_board = await UserDAO.find_by_points_desc(session=session_without_commit)
        
        if not leader_board:
            return await callback.message.answer("–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ –ø—É—Å—Ç–∞. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!", reply_markup=main_kb())
            
        
        leader_board_rows = []
        for i, user in enumerate(leader_board):
            prefix = ""
            if i == 0:
                prefix = "ü•á "  
            elif i == 1:
                prefix = "ü•à "  
            elif i == 2:
                prefix = "ü•â "  
            else:
                prefix = f"{i + 1}. "
                
            leader_board_rows.append(f"{prefix}{user.first_name} ‚Äî {user.points} –æ—á–∫–æ–≤")
        
        leader_board_table = "\n".join(leader_board_rows)

        leader_board_text = f"üèÜ <b>–¢–ê–ë–õ–ò–¶–ê –õ–ò–î–ï–†–û–í</b> üèÜ\n\n{leader_board_table}\n\n<i>–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—á–∫–∏, —á—Ç–æ–±—ã –ø–æ–¥–Ω—è—Ç—å—Å—è –≤—ã—à–µ!</i>"

        
        return await callback.message.answer(leader_board_text, parse_mode="HTML", reply_markup=main_kb())